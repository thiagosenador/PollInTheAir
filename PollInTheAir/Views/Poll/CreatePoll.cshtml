@model PollInTheAir.Domain.Models.Poll

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <style type="text/css">
        #map {
            width: 100%;
            height: 400px;
            margin-bottom: 15px;
            border: 2px solid #fff;
        }

        #slider {
            margin-bottom: 40px;
        }
    </style>

    <link rel="stylesheet" href="~/Content/bootstrap.css" />
    <link rel="stylesheet" href="~/Content/jquery-ui-slider-pips.css" />
    <link rel="stylesheet" href="~/Content/themes/base/slider.css" />
    <link rel="stylesheet" href="~/Content/themes/base/theme.css" />
    <link rel="stylesheet" href="~/Content/datepicker.css" />

    <script src="~/Scripts/jquery-1.9.1.js"></script>
    <script src="~/Scripts/jquery-ui-1.11.4.js"></script>
    <script src="~/Scripts/jquery-ui-slider-pips.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>

    <script>
        var initialRange = 50;
        // DatePicker and Slider

        $(function () {
            $('#ExpiresAt').datepicker({
                onRender: function (date) {
                    var nowTemp = new Date();
                    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

                    return date.valueOf() < now.valueOf() ? 'disabled' : '';
                }
            });

            $(".slider").slider({
                min: 10,
                max: 100,
                value: initialRange,
                step: 5,
                slide: function (event, ui) {
                    UpdateCircle(parseInt(ui.value));
                }
            }).slider("pips").slider("float", {
                suffix: 'm'
            });
        });

        // Google Maps

        var map;
        var pos;
        var circle;

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 18,
                streetViewControl: false,
                mapTypeControl: false
            });

            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    function (position) {
                        pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        map.setCenter(pos);

                        this.PlaceMarker();

                        this.SetLatLongValues();

                        this.DrawRange(initialRange);
                        this.UpdateCircle(initialRange);
                    });
            }
        }

        function PlaceMarker() {
            var marker = new google.maps.Marker({
                position: pos,
                map: map,
                title: 'you are here!'
            });

            marker.setMap(map);
        }

        function SetLatLongValues() {
            $("#latitude").val(pos.lat);
            $("#longitude").val(pos.lng);
        }

        function DrawRange(radius) {
            circle = new google.maps.Circle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 1,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: map,
                center: pos
            });

            circle.setMap(map);
        }

        function UpdateCircle(radius) {
            circle.setRadius(radius);

            $("#range").val(radius);
        }
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBTKJ2aBQb-q0LmbjCu2C-8TwGsgS7S1H4&callback=initMap">
    </script>

    <title>Poll in the air</title>
</head>
<body>
    <div class="container">
        <div class="page-header">
            <h1>Create poll</h1>
        </div>

        @using (Html.BeginForm("CreatePoll", "Poll"))
        {
            <div class="row">
                <div class="form-group col-xs-8">
                    @Html.LabelFor(m => m.Title)
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control col-xs-4", @maxlength = "128" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-xs-2">
                    @Html.LabelFor(m => m.ExpiresAt)
                    @Html.TextBoxFor(m => m.ExpiresAt, new { @class = "form-control", @maxlength = "16" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-xs-8">
                    @Html.Label("range")

                    <div id="slider" class="slider"></div>

                    <div id="map"></div>

                    @Html.HiddenFor(m => m.CreationLocation.Latitude, new { @id = "latitude" })
                    @Html.HiddenFor(m => m.CreationLocation.Longitude, new { @id = "longitude" })
                    @Html.HiddenFor(m => m.Range, new { @id = "range" })
                </div>
            </div>

            <div class="btn-toolbar" role="toolbar">
                <div class="btn-group">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        add question <span class="caret"></span>
                    </button>

                    <ul class="dropdown-menu">
                        <li><button class="btn btn-link" type="submit" name="questionType" value="free text">free text</button></li>
                        <li><button class="btn btn-link" type="submit" name="questionType" value="multiple choices">multiple choices</button></li>
                    </ul>
                </div>
            </div>
        }
    </div>
</body>
</html>
